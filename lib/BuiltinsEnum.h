// Copyright 2019 The Clspv Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#ifndef CLSPV_LIB_BUILTINSENUM_H_
#define CLSPV_LIB_BUILTINSENUM_H_

namespace clspv {
namespace Builtins {

enum BuiltinType {
  kBuiltinNone = 0,

  kType_Async_Start = 1,
  kAsyncWorkGroupCopy,
  kAsyncWorkGroupStridedCopy,
  kWaitGroupEvents,
  kPrefetch,
  kType_Async_End = 6,

  kType_Atomic_Start = 7,
  kAtomicInit,
  kAtomicAdd,
  kAtomicSub,
  kAtomicInc,
  kAtomicDec,
  kAtomicXchg,
  kAtomicCmpxchg,
  kAtomicMin,
  kAtomicMax,
  kAtomicAnd,
  kAtomicOr,
  kAtomicXor,
  kAtomicWorkItemFence,
  kAtomicStore,
  kAtomicStoreExplicit,
  kAtomicLoad,
  kAtomicLoadExplicit,
  kAtomicExchange,
  kAtomicExchangeExplicit,
  kAtomicCompareExchangeStrong,
  kAtomicCompareExchangeStrongExplicit,
  kAtomicCompareExchangeWeak,
  kAtomicCompareExchangeWeakExplicit,
  kAtomicFetchKey,
  kAtomicFetchKeyExplicit,
  kAtomicFlagTestAndSet,
  kAtomicFlagTestAndSetExplicit,
  kAtomicFlagClear,
  kAtomicFlagClearExplicit,
  kType_Atomic_End = 37,

  kType_Common_Start = 38,
  kDegrees,
  kMix,
  kRadians,
  kSign,
  kSmoothstep,
  kStep,
  kType_Common_End = 45,

  kType_Convert_Start = 46,
  kConvert,
  kType_Convert_End = 48,

  kType_Event_Start = 49,
  kRetainEvent,
  kReleaseEvent,
  kCreateUserEvent,
  kIsValidEvent,
  kSetUserEventStatus,
  kType_Event_End = 55,

  kType_MemoryFence_Start = 56,
  kMemFence,
  kReadMemFence,
  kWriteMemFence,
  kType_MemoryFence_End = 60,

  kType_Geometric_Start = 61,
  kCross,
  kDot,
  kDistance,
  kLength,
  kNormalize,
  kFastDistance,
  kFastLength,
  kFastNormalize,
  kType_Geometric_End = 70,

  kType_Image_Start = 71,
  kReadImagef,
  kReadImagei,
  kReadImageui,
  kReadImageh,
  kWriteImagef,
  kWriteImagei,
  kWriteImageui,
  kWriteImageh,
  kGetImageWidth,
  kGetImageHeight,
  kGetImageDepth,
  kGetImageChannelDataType,
  kGetImageChannelOrder,
  kGetImageDim,
  kGetImageArraySize,
  kGetImageNumSamples,
  kType_Image_End = 88,

  kType_Integer_Start = 89,
  kAbs,
  kAbsDiff,
  kAddSat,
  kClamp,
  kClz,
  kCtz,
  kHadd,
  kMad24,
  kMadHi,
  kMadSat,
  kMax,
  kMin,
  kMul24,
  kMulHi,
  kPopcount,
  kRhadd,
  kRotate,
  kSubSat,
  kUpsample,
  kType_Integer_End = 109,

  kType_Math_Start = 110,
  kAcos,
  kAcosh,
  kAcospi,
  kAsin,
  kAsinh,
  kAsinpi,
  kAtan,
  kAtan2,
  kAtanh,
  kAtanpi,
  kAtan2pi,
  kCbrt,
  kCeil,
  kCopysign,
  kCos,
  kHalfCos,
  kNativeCos,
  kCosh,
  kCospi,
  kHalfDivide,
  kNativeDivide,
  kErf,
  kErfc,
  kExp,
  kHalfExp,
  kNativeExp,
  kExp2,
  kHalfExp2,
  kNativeExp2,
  kExp10,
  kHalfExp10,
  kNativeExp10,
  kExpm1,
  kFabs,
  kFdim,
  kFloor,
  kFma,
  kFmax,
  kFmin,
  kFmod,
  kFract,
  kFrexp,
  kHypot,
  kIlogb,
  kLdexp,
  kLgamma,
  kLgammaR,
  kLog,
  kHalfLog,
  kNativeLog,
  kLog2,
  kHalfLog2,
  kNativeLog2,
  kLog10,
  kHalfLog10,
  kNativeLog10,
  kLog1p,
  kLogb,
  kMad,
  kMagmax,
  kMagmin,
  kModf,
  kNan,
  kNextafter,
  kPow,
  kPown,
  kPowr,
  kHalfPowr,
  kNativePowr,
  kHalfRecip,
  kNativeRecip,
  kRemainder,
  kRemquo,
  kRint,
  kRound,
  kRootn,
  kRsqrt,
  kHalfRsqrt,
  kNativeRsqrt,
  kSin,
  kHalfSin,
  kNativeSin,
  kSincos,
  kSinh,
  kSinpi,
  kSqrt,
  kHalfSqrt,
  kNativeSqrt,
  kTan,
  kHalfTan,
  kNativeTan,
  kTanh,
  kTanpi,
  kTgamma,
  kTrunc,
  kType_Math_End = 206,

  kType_Relational_Start = 207,
  kIsequal,
  kIsnotequal,
  kIsgreater,
  kIsgreaterequal,
  kIsless,
  kIslessequal,
  kIslessgreater,
  kIsfinite,
  kIsinf,
  kIsnan,
  kIsnormal,
  kIsordered,
  kIsunordered,
  kSignbit,
  kAny,
  kAll,
  kBitselect,
  kSelect,
  kType_Relational_End = 226,

  kType_Sync_Start = 227,
  kBarrier,
  kWorkGroupBarrier,
  kType_Sync_End = 230,

  kType_Vector_Start = 231,
  kShuffle,
  kShuffle2,
  kVecStep,
  kVload,
  kVloadHalf,
  kVloadaHalf,
  kVstore,
  kVstoreHalf,
  kVstoreaHalf,
  kType_Vector_End = 241,

  kType_WorkItem_Start = 242,
  kGetGlobalId,
  kGetGlobalSize,
  kGetGlobalOffset,
  kGetGlobalLinearId,
  kGetGroupId,
  kGetLocalId,
  kGetLocalLinearId,
  kGetLocalSize,
  kGetEnqueuedLocalSize,
  kGetNumGroups,
  kGetWorkDim,
  kType_WorkItem_End = 254,

  kType_Pipe_Start = 255,
  kReadPipe,
  kWritePipe,
  kReserveReadPipe,
  kCommitReadPipe,
  kIsValidReserveId,
  kWorkGroupReserveReadPipe,
  kWorkGroupReserveWritePipe,
  kWorkGroupCommitReadPipe,
  kWorkGroupCommitWritePipe,
  kGetPipeNumPackets,
  kGetPipeMaxPackets,
  kType_Pipe_End = 267,

  kType_SubgroupsKHR_Start = 268,
  kGetSubGroupSize,
  kGetMaxSubGroupSize,
  kGetNumSubGroups,
  kGetEnqueuedNumSubGroups,
  kGetSubGroupId,
  kGetSubGroupLocalId,
  kSubGroupBarrier,
  kSubGroupAll,
  kSubGroupAny,
  kSubGroupBroadcast,
  kSubGroupReduceAdd,
  kSubGroupReduceMin,
  kSubGroupReduceMax,
  kSubGroupScanExclusiveAdd,
  kSubGroupScanExclusiveMin,
  kSubGroupScanExclusiveMax,
  kSubGroupScanInclusiveAdd,
  kSubGroupScanInclusiveMin,
  kSubGroupScanInclusiveMax,
  kSubGroupReserveReadPipe,
  kSubGroupReserveWritePipe,
  kSubGroupCommitReadPipe,
  kSubGroupCommitWritePipe,
  kGetKernelSubGroupCountForNdrange,
  kGetKernelMaxSubGroupSizeForNdrange,
  kType_SubgroupsKHR_End = 294,
}; // enum BuiltinType

} // namespace Builtins
} // namespace clspv

#endif // CLSPV_LIB_BUILTINSENUM_H_
